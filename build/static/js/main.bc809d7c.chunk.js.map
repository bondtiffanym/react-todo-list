{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/Pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","borderRadius","Header","react_default","a","createElement","style","react_router_dom","className","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","paddingLeft","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","paddingTop","type","marginRight","onChange","markComplete","bind","onClick","delete","Component","Todos","todos","map","components_TodoItem","AddTodo","state","e","setState","target","onSubmit","preventDefault","addTodo","display","name","placeholder","flex","About","Fragment","marginTop","App","toConsumableArray","filter","newTodo","uuid","v4","_this2","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc809d7c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>TodoList</h1>\n            <Link className=\"link\" to=\"/\">Home</Link> | <Link className=\"link\" to=\"/about\">About</Link>\n        </header>\n    )\n}\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px',\n    borderRadius: '5px',\n}\nexport default Header;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            paddingLeft: '10px',\n            borderBottom: '1px #ccc solid',\n            borderRadius: '5px',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n   \n  render() {\n      const {id, title} = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p style={{paddingTop: '15px'}}>\n        <input type=\"checkbox\" className=\"custom-checkbox\" style={{marginRight: '10px'}} onChange={this.props.markComplete.bind(this, id)}/> \n        {title}\n        <button type=\"button\" className=\"btnDel\" onClick={this.props.delete.bind(this, id)}>x</button></p>\n      </div>\n    )\n  }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n\n    render() {\n        return this.props.todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delete={this.props.delete}/>\n        ));\n    }\n\n}\n\n//PropTypes\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react'\n\nexport class AddTodo extends Component {\n\n    //This is the value of the text input field and is updated as user types in a new value\n    state = {\n        title: ''\n    }\n\n    //Updates the 'title' state of the text input field\n    onChange = (e) => this.setState({ title: e.target.value });\n\n    //Submits the title value of input field to create new Todo\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({title: ''});\n    };\n\n  render() {\n    return (\n     <form style={{display: 'flex'}} onSubmit={this.onSubmit}>\n         \n         <input type=\"text\" name=\"title\" placeholder=\"Add Todo\" className=\"input-group\" style={{paddingLeft: '10px'}} value={this.state.title} onChange={this.onChange}/>\n        \n         <input type=\"submit\" value=\"submit\" className=\"btn \n         btn-outline-dark btn-lg\" style={{flex: '1'}}/>\n\n     </form>\n    )\n  }\n}\n\nexport default AddTodo;\n","import React from 'react'\n\nfunction About() {\n  return (\n    <React.Fragment>\n        <h1 style={{textAlign: 'center', marginTop: '20px'}}>About</h1>\n        <p style={{textAlign: 'center'}}>This is the Todo List app v1.0.0. It is part of a React crash course.\n        </p>\n    </React.Fragment>\n  )\n}\nexport default About;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/Pages/About';\nimport uuid from 'uuid';\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n  // Toggles todo completion state\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })});\n  }\n\n  //Delete Todo\n  delete = (id) => {\n    this.setState({\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    });\n  }\n\n  //Add Todo\n  addTodo = (title) => {\n\n    //a variable that creates a new Todo object, called in the this.setState method below\n    const newTodo = {\n      id: uuid.v4(),\n      title,\n      completed: false,\n    };\n\n    //the '...' is a spreader method that copies this.state.todos as a new object, then newTodo changes the keys inside the object\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  }\n\n\n  render() {\n  return (\n    //from BrowserRouter, allows the creation of multiple pages. Create new pages with \"<Route path >\"\n  <Router>\n    <div className=\"App\">\n    <div className=\"container container-fluid\">\n    <Header />\n    <Route exact path=\"/\" render={props => (\n      <React.Fragment>\n        <AddTodo addTodo={this.addTodo}/>\n         <Todos todos={this.state.todos} markComplete={this.markComplete}delete={this.delete} />\n      </React.Fragment>\n    )} />\n    <Route  path=\"/about\" component={About} />\n    </div>\n    </div>\n    </Router>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}